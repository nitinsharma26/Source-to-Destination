#include <bits/stdc++.h>
using namespace std;

//source,price,time,mode,destination
vector<pair<pair<float,float>,pair<char,int>>> adj[1000000];
unordered_map<string,int> statemappingnumber;
unordered_map<int,string> numbermappingstate;
static int countOfState;

void pathremove(string &s){
    int n=s.size()-1;
    while(1){
        char c = s.back();
        if(c=='*'){
            s.pop_back();
            break;
        }else{
            s.pop_back();
        }
    }
    return;
}

void dfs(int s,int d,vector<int> &vis,string &ans,string path){
    if(s==d){
        ans+=path;
        ans+="?";
        return;
    }
    
    vis[s]=1;
    
    for(auto it:adj[s]){
        if(vis[it.second.second]==0){
            path.push_back('*');
            path+=numbermappingstate[s];
            path+=("_");
            path.push_back(it.second.first);
            path+=("_");
            path+=numbermappingstate[it.second.second];
            dfs(it.second.second,d,vis,ans,path);
            pathremove(path);
        } 
    }
    vis[s]=0;
}

string allRoutee(int source,int destination){
    vector<int> vis(countOfState,0);
    string ans = "";
    string path = "";
    dfs(source,destination,vis,ans,path);
    return ans;
}

void addInGraph(int source,int destination,float price,float time,char mode){
    adj[source].push_back({{price,time},{mode,destination}});
}

void makeGraph(string source,string destination,float price,float time,char mode){
    int source_num,destination_num;
    if(statemappingnumber.find(source)!=statemappingnumber.end()){
        source_num = statemappingnumber[source];
    }else{
        statemappingnumber[source]=countOfState;
        source_num=countOfState;
        countOfState++;
    }
    
    if(statemappingnumber.find(destination)!=statemappingnumber.end()){
        destination_num = statemappingnumber[destination];
    }else{
        statemappingnumber[destination]=countOfState;
        destination_num=countOfState;
        countOfState+=1;
    }
    addInGraph(source_num,destination_num,price,time,mode);
}

int main(){
    // makeGraph("Delhi","Chandigarh",5000.0,2.0,'F');
    // makeGraph("Delhi","Chandigarh",2000.0,4.0,'T');
    // makeGraph("Delhi","Chandigarh",300.0,6.0,'B');
    
    //  makeGraph("Delhi","Patiala",1800.0,6.0,'T');
    // makeGraph("Delhi","Patiala",800.0,8.0,'B');
    
    //  makeGraph("Delhi","Pune",6000.0,3.0,'F');
    //  makeGraph("Delhi","Pune",3500.0,14.0,'T');
    // makeGraph("Delhi","Pune",2000.0,20.0,'B');
    
    //  makeGraph("Chandigarh","Delhi",4500.0,2.0,'F');
    // makeGraph("Chandigarh","Delhi",1000.0,6.0,'B');
    // makeGraph("Chandigarh","Delhi",2000.0,4.0,'T');
    
    
    // makeGraph("Chandigarh","Patiala",400.0,1.0,'T');
    // makeGraph("Chandigarh","Patiala",200.0,2.0,'B');
    
    //  makeGraph("Chandigarh","Pune",8000.0,4.0,'F');
    // makeGraph("Chandigarh","Pune",4000.0,18.0,'T');
    // makeGraph("Chandigarh","Pune",3500.0,24.0,'B');
    
    //  makeGraph("Patiala","Chandigarh",400.0,1.0,'T');
    // makeGraph("Patiala","Chandigarh",200.0,2.0,'B');
    //  makeGraph("Patiala","katra",2000.0,2.0,'F');
    
    //  makeGraph("Patiala","Delhi",1800.0,6.0,'T');
    // makeGraph("Patiala","Delhi",800.0,8.0,'B');                                
    // makeGraph("Patiala","Pune",3800.0,20.0,'T');
    
    
    // makeGraph("Pune","Delhi",6500.0,3.0,'F');
    //  makeGraph("Pune","Delhi",3500.0,14.0,'T');
    // makeGraph("Pune","Delhi",2500.0,20.0,'B');

    //  makeGraph("Pune","Chandigarh",8200.0,4.0,'F');
    //  makeGraph("Pune","Chandigarh",3800.0,18.0,'T');
    // makeGraph("Pune","Chandigarh",3200.0,24.0,'B');
    //  makeGraph("Pune","Patiala",3800.0,20.0,'T');
     
    
    
    
    makeGraph("Delhi","Chandigarh",2000.0,2.0,'F');
    makeGraph("Delhi","Chandigarh",700.0,6.0,'B');
    makeGraph("Delhi","Patiala",1100.0,6.0,'T');
    makeGraph("Delhi","Patiala",900.0,8.0,'B');
    makeGraph("Delhi","Jammu",7000.0,4.0,'F');
    makeGraph("Jammu","Katra",200.0,2.0,'B');
    makeGraph("Jammu","Patiala",1100.0,11.0,'T');
    makeGraph("Patiala","Katra",800.0,6.0,'T');
    makeGraph("Patiala","Katra",700.0,7.0,'B');
    
    
    makeGraph("Chandigarh","Delhi",2000.0,2.0,'F');
    makeGraph("Chandigarh","Delhi",700.0,6.0,'B');
    makeGraph("Patiala","Delhi",1100.0,6.0,'T');
    makeGraph("Patiala","Delhi",900.0,8.0,'B');
    makeGraph("Jammu","Delhi",7000.0,4.0,'F');
    makeGraph("Katra","Jammu",200.0,2.0,'B');
    makeGraph("Patiala","Jammu",1100.0,11.0,'T');
    makeGraph("Katra","Patiala",800.0,6.0,'T');
    makeGraph("Katra","Patiala",700.0,7.0,'B');

    for(auto it:statemappingnumber){
        numbermappingstate[it.second]=it.first;
    }

    // for(int i=0;i<countOfState;i++){
    //     cout<<"From "<<numbermappingstate[i]<<" to"<<endl;
    //     for(auto it:adj[i]){
    //         cout<<numbermappingstate[it.second.second]<<" ";
    //     }
    //     cout<<endl;
    // }
    
    cout<<allRoutee(statemappingnumber["Delhi"],statemappingnumber["Katra"]);
	return 0;
}
